using eSyaCustomer.DL.Entities;
using eSyaCustomer.DO;
using eSyaCustomer.IF;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace eSyaCustomer.DL.Repository
{
   public class PatientPreRegistrationRepository: IPatientPreRegistrationRepository
    {
        public async Task<List<DO_PatientPreRegistration>> GetPatientPreRegistrationsbyBusinessKey(int Businesskey)
        {
            try
            {
                using (var db = new eSyaEnterprise())
                {
                    var ds = db.GtEopprr.Where(p=>p.BusinessKey==Businesskey)
                        .Select(x => new DO_PatientPreRegistration
                        {
                            BusinessKey=x.BusinessKey,
                            Prkey=x.Prkey,
                            Prdate=x.Prdate,
                            PatientFirstName=x.PatientFirstName,
                            PatientMiddleName=x.PatientMiddleName,
                            PatientLastName=x.PatientLastName,
                            Gender=x.Gender,
                            AgeYy=x.AgeYy,
                            DateOfBirth =x.DateOfBirth,
                            Isdcode=x.Isdcode,
                            MobileNumber=x.MobileNumber,
                            EmailId=x.EmailId,
                            MotherTongue=x.MotherTongue,
                            Address=x.Address,
                            City=x.City,
                            Pincode=x.Pincode,
                            Occupation=x.Occupation,
                            PersonalInfo=x.PersonalInfo,
                            ReferredBy =x.ReferredBy,
                            PresentComplaints=x.PresentComplaints,
                            SpeakingLanguages=x.SpeakingLanguages,
                            ActiveStatus=x.ActiveStatus
                        }).ToListAsync();

                    return await ds;
                }

            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public async Task<DO_ReturnParameter> InsertPatientPreRegistration(DO_PatientPreRegistration obj)
        {
            using (var db = new eSyaEnterprise())
            {
                using (var dbContext = db.Database.BeginTransaction())
                {
                    try
                    {
                       
                            int pr_Key =Convert.ToInt32(db.GtEopprr.Select(p=>p.Prkey).DefaultIfEmpty().Max());
                            pr_Key = pr_Key + 1;
                            var pr_registration = new GtEopprr
                            {
                                BusinessKey = obj.BusinessKey,
                                Prkey = pr_Key,
                                Prdate = obj.Prdate,
                                PatientFirstName = obj.PatientFirstName,
                                PatientMiddleName = obj.PatientMiddleName,
                                PatientLastName = obj.PatientLastName,
                                Gender = obj.Gender,
                                AgeYy=obj.AgeYy,
                                Occupation=obj.Occupation,
                                PersonalInfo=obj.PersonalInfo,
                                DateOfBirth = obj.DateOfBirth,
                                Isdcode = obj.Isdcode,
                                MobileNumber = obj.MobileNumber,
                                EmailId = obj.EmailId,
                                MotherTongue = obj.MotherTongue,
                                Address = obj.Address,
                                City = obj.City,
                                Pincode = obj.Pincode,
                                ReferredBy = obj.ReferredBy,
                                PresentComplaints = obj.PresentComplaints,
                                SpeakingLanguages = obj.SpeakingLanguages,
                                ActiveStatus = obj.ActiveStatus,
                                FormId = obj.FormId,
                                CreatedBy = obj.UserID,
                                CreatedOn = DateTime.Now,
                                CreatedTerminal = obj.TerminalID
                            };
                            db.GtEopprr.Add(pr_registration);

                            await db.SaveChangesAsync();
                            dbContext.Commit();
                            return new DO_ReturnParameter() { Status = true, Message = "Sucessfully Created"};
                       
                    }
                    catch (DbUpdateException ex)
                    {
                        dbContext.Rollback();
                        throw new Exception(CommonMethod.GetValidationMessageFromException(ex));
                    }
                    catch (Exception ex)
                    {
                        dbContext.Rollback();
                        throw ex;
                    }
                }
            }
        }
    }
}
